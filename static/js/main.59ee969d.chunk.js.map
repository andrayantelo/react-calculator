{"version":3,"sources":["helpers/helpers.js","components/Display.js","components/Key.js","actions/index.js","apis/keys.js","components/KeyList.js","components/App.js","reducers/summaryReducer.js","reducers/index.js","index.js"],"names":["calculate","expression","eval","join","hasLeadingZeros","num","regExp","console","log","test","connect","state","summary","formula","result","display","length","className","id","clear","type","pressNumber","payload","pressDecimal","pressOperator","operator","keyType","btnClass","name","value","onClick","event","elType","target","dataset","key","data-type","numbers","operators","extras","KeyList","numbersList","map","number","index","operatorsList","extrasList","extra","App","initialSummary","combineReducers","action","prev","slice","isNaN","includes","Number","isInteger","penultimate","undefined","total","store","createStore","reducers","applyMiddleware","next","group","info","getState","groupEnd","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.59ee969d.chunk.js","sourcesContent":["/*const replaceDoubleMinus = (expression) => {\n    let regExp = /--/;\n    return expression.replace(regExp, \"+\");\n}*/\n\nexport const calculate = (expression) => {\n    /*console.log(expression);\n    const parsed = expression.map((symbol, index) => {\n        if (isNaN(symbol)) {\n            return symbol\n        }\n        else {\n            return parseFloat(symbol)\n        }\n    })\n    console.log(parsed);\n    */\n    //expression = replaceDoubleMinus(expression.join(''));\n    return eval(expression.join(' '));\n} \n\nexport const hasLeadingZeros = (num) => {\n//^0[0-9].*$\n// num is string\n\n    let regExp = /^0[0-9].*$/;\n    console.log(regExp.test(num))\n    return regExp.test(num)\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Display = ({ summary }) => {\n    const {formula, result} = summary;\n    const display = formula[formula.length - 1] || 0;\n    return (\n        <div>\n            <div>\n                <span className=\"spacer\"></span>\n                {formula}\n            </div>\n            <div id=\"display\">\n                {result? result: display}\n            </div>\n        </div>\n    )        \n}\n\nconst mapStateToProps = (state) => {\n    return { \n                summary: state.summary\n           }\n}\n\nexport default connect(\n    mapStateToProps\n)(Display);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clear, calculate, pressNumber, pressDecimal, pressOperator } from '../actions';\n\nconst Key = ({keyType, clear,calculate, pressNumber, pressDecimal, pressOperator }) => {\n    const btnClass = keyType.type || \"\";\n\n    const handleClick = (event) => {\n        const elType = event.target.dataset.type;\n        let key = event.target.value;\n\n        if (elType === \"number\") {\n            pressNumber(key);\n        }\n        else if (elType === \"all-clear\") {\n            clear();\n        }\n        else if (elType === \"decimal-symbol\") {\n            pressDecimal();\n        }\n        else if (elType === \"operator\") {\n            if (key === \"x\") {\n                key = \"*\";\n            }\n            pressOperator(key);\n        }\n        else {\n            calculate();\n        }\n            \n    };\n\n    return (\n        <div className={btnClass}>\n            <button \n                id={keyType.name}\n                className=\"ui button\"\n                value={keyType.value}\n                onClick={handleClick}\n                data-type={keyType.type}\n            >\n                {keyType.value}\n            </button>\n        </div>\n    )\n}\n\nexport default connect(\n    null,\n    { \n      clear,\n      calculate,\n      pressNumber,\n      pressDecimal,\n      pressOperator }\n)(Key);","export const PRESS_NUMBER = 'PRESS_NUMBER';\nexport const PRESS_OPERATOR = 'PRESS_OPERATOR';\nexport const PRESS_DECIMAL = 'PRESS_DECIMAL';\nexport const CLEAR = 'CLEAR';\nexport const CALCULATE = 'CALCULATE';\n\nexport const pressNumber = (num) => {\n    return {\n        type: PRESS_NUMBER,\n        payload: num\n    }\n}\n\nexport const pressDecimal = () => {\n    return {\n        type: PRESS_DECIMAL\n    }\n}\n\nexport const clear = () => {\n    return {\n        type: CLEAR\n    }\n}\n\nexport const pressOperator = (operator) => {\n    return {\n        type: PRESS_OPERATOR,\n        payload: operator\n    }\n}\n\nexport const calculate = () => {\n    return {\n        type: CALCULATE\n    }\n}\n\n\n","\nexport const numbers = [\n    {\n      \"id\": 0,\n      \"name\": \"zero\",\n      \"value\": 0,\n      \"type\" : \"number\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"one\",\n        \"value\": 1,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"two\",\n        \"value\": 2,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"three\",\n        \"value\": 3,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"four\",\n        \"value\": 4,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"five\",\n        \"value\": 5,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"six\",\n        \"value\": 6,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"seven\",\n        \"value\": 7,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"eight\",\n        \"value\": 8,\n        \"type\" : \"number\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"nine\",\n        \"value\": 9,\n        \"type\" : \"number\"\n    }\n\n];\n    \nexport const operators = [\n    {\n        \"id\": 10,\n        \"name\": \"divide\",\n        \"value\": \"/\",\n        \"type\": \"operator\"\n    },\n    {\n        \"id\": 11,\n        \"name\": \"multiply\",\n        \"value\": \"x\",\n        \"type\": \"operator\"\n    },\n    {\n        \"id\": 12,\n        \"name\": \"subtract\",\n        \"value\": \"-\",\n        \"type\": \"operator\"\n    },\n    {\n        \"id\": 13,\n        \"name\": \"add\",\n        \"value\": \"+\",\n        \"type\": \"operator\"\n    }\n];\n    \nexport const extras = [\n    {\n        \"id\": 14,\n        \"name\": \"decimal\",\n        \"value\": \".\",\n        \"type\": \"decimal-symbol\"\n    },\n    {\n        \"id\": 15,\n        \"name\": \"clear\",\n        \"value\": \"AC\",\n        \"type\": \"all-clear\"\n    },\n    {\n        \"id\": 16,\n        \"name\": \"equals\",\n        \"value\": \"=\",\n        \"type\": \"equal-sign\"\n    }\n];","import React from 'react';\nimport Key from './Key';\nimport { numbers, operators, extras } from '../apis/keys.js';\n\n\nconst KeyList = () => {\n    const numbersList = numbers.map((number, index) => {\n        return <Key key={number.id} keyType={number} />\n    })\n\n    const operatorsList = operators.map((operator, index) => {\n        return <Key key={operator.id} keyType={operator} />\n    })\n    \n    const extrasList = extras.map((extra, index) => {\n        return <Key key={extra.id} keyType={extra} />\n    })\n    \n    return (\n        \n        <div className=\"keyPad\">\n            {operatorsList}\n            {numbersList}\n            {extrasList}\n        </div>\n        \n    )\n}\n\nexport default KeyList;","import React from 'react';\nimport Display from './Display';\nimport KeyList from './KeyList';\nimport './style.css';\n\nconst App = () => {\n    return (\n        <div className=\"outer-container\">\n            <div className=\"ui inverted segment\">\n                <div className=\"outer-row\">\n                    <Display />\n                </div>\n                <div className=\"outer-row\">\n                    <KeyList />\n                </div>  \n            </div>\n        </div>\n    )\n}\n\nexport default App;","import { CLEAR, CALCULATE, PRESS_OPERATOR, PRESS_DECIMAL, PRESS_NUMBER } from '../actions';\nimport { calculate } from '../helpers/helpers.js';\n\nconst operators = ['-', '+', '*', '/'];\n\n// state = {summary: {formula: [], result: \"\"}}\nlet initialSummary =  {\n    formula: [],\n    result: \"\"\n};\n\nexport default (summary=initialSummary, action) => {\n    const { formula } = summary;\n    let prev = formula[formula.length - 1];\n    \n    switch(action.type) {\n        case PRESS_NUMBER:\n            if (prev === \"0\") {\n                return {\n                    ...summary,\n                    formula: [...formula.slice(0, -1), action.payload]\n                };\n            }\n            else if (!isNaN(prev)) {\n                prev = prev + action.payload;\n                return {\n                    ...summary,\n                    formula: [...formula.slice(0, -1), prev]\n                };\n            }\n            return {\n                ...summary,\n                formula: [...formula, action.payload]\n            };\n        case PRESS_DECIMAL:\n            if (prev === \"\" || operators.includes(prev)) {\n                return {\n                    ...summary,\n                    formula: [...formula.slice(0, -1), \"0.\"]\n                };\n            }\n            else if (isNaN(prev)) {\n                return {\n                    ...summary,\n                    formula: [...formula, \"0.\"]\n                }\n            }\n            else if (!Number.isInteger(prev) && !prev.includes(\".\")) {\n                return {\n                    ...summary,\n                    formula: [...formula.slice(0, -1), prev + \".\"]\n                }\n            }\n            else if (prev.includes(\".\")) {\n                return summary;\n            }\n            return {\n                ...summary,\n                formula: [...formula, \".\"]\n            };\n        case PRESS_OPERATOR:\n            let penultimate = formula[formula.length - 2] || undefined;\n            // if the last element is NOT a minus sign, and\n            // the person pressed minus, include the minus sign\n            if (prev !== \"-\" && action.payload === \"-\") {\n                return {\n                    ...summary,\n                    formula: [...formula, action.payload]\n                };\n            }\n            // if the last element is a minus sign, check if the \n            // element before that is an operator before replacing\n            else if (prev === \"-\" && operators.includes(penultimate)) {\n                return {\n                    ...summary,\n                    formula: [...formula.slice(0, -2), action.payload]\n                };\n            }\n            else if (prev === \"-\" && !operators.includes(penultimate)) {\n                return {\n                    ...summary,\n                    formula: [...formula, action.payload]\n                }\n            }\n            // if the last element is an operator, replace the operator\n            // with the new operator\n            else if (operators.includes(prev)) {\n                return {\n                    ...summary,\n                    formula: [...formula.slice(0, -1), action.payload]\n                };\n            }\n            // include the operator in the formula\n            return {\n                ...summary,\n                formula: [...formula, action.payload]\n            };\n        case CALCULATE:\n            const total = calculate(formula);\n            return {\n                ...summary,\n                result: total,\n                formula: [total]};\n        case CLEAR:\n            return initialSummary;\n        default:\n            return summary;\n    }\n}","import { combineReducers } from 'redux';\n//import displayReducer from './displayReducer';\n//import formulaReducer from './formulaReducer';\nimport summaryReducer from './summaryReducer';\n\n/* \nstate = {\n    display: \"0\",\n    formula: \"0\",\n\n}\n*/\n\n\nexport default combineReducers({\n    summary: summaryReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst myLogger = (store) => (next) => (action) => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    let result = next(action);\n    console.log(\"Next state.summary.formula: \", store.getState().summary.formula)\n    console.log(\"Next state: \", store.getState());\n    console.groupEnd();\n    return result;\n}\n\nconst store = createStore(reducers, {}, applyMiddleware(myLogger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}